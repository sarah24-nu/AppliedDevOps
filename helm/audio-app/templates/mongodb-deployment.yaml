{{- if .Values.mongodb.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mongodb
  namespace: {{ .Release.Namespace }}
  labels:
    app: mongodb
    {{- include "audio-app.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
      {{- with .Values.mongodb.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - name: mongodb
        image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
        imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: MONGODB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: MONGODB_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          value: {{ .Values.mongodb.auth.database | quote }}
        resources:
          {{- toYaml .Values.mongodb.resources | nindent 10 }}
        volumeMounts:
        - name: data
          mountPath: /data/db
        livenessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-mongodb
{{- end }} 